"""Add document and access log tables

Revision ID: 63a52c18ad50
Revises: 9213d7e78a4e
Create Date: 2025-08-21 22:14:41.257409

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '63a52c18ad50'
down_revision: Union[str, Sequence[str], None] = '9213d7e78a4e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('sender_id', sa.String(length=36), nullable=False),
    sa.Column('recipient_id', sa.String(length=36), nullable=False),
    sa.Column('encrypted_content', sa.Text(), nullable=False),
    sa.Column('encryption_key_id', sa.String(length=100), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('view_limit', sa.Integer(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'VIEW_EXHAUSTED', 'DELETED', name='documentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_expires_at'), 'documents', ['expires_at'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_recipient_id'), 'documents', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_documents_sender_id'), 'documents', ['sender_id'], unique=False)
    op.create_index(op.f('ix_documents_status'), 'documents', ['status'], unique=False)
    op.create_table('document_access_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('document_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('action', sa.Enum('VIEW', 'DOWNLOAD', 'UPLOAD', 'DELETE', 'UPDATE', 'ACCESS_DENIED', name='accessaction'), nullable=False),
    sa.Column('success', sa.String(length=5), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('accessed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_access_logs_accessed_at'), 'document_access_logs', ['accessed_at'], unique=False)
    op.create_index(op.f('ix_document_access_logs_action'), 'document_access_logs', ['action'], unique=False)
    op.create_index(op.f('ix_document_access_logs_document_id'), 'document_access_logs', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_access_logs_id'), 'document_access_logs', ['id'], unique=False)
    op.create_index(op.f('ix_document_access_logs_user_id'), 'document_access_logs', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_document_access_logs_user_id'), table_name='document_access_logs')
    op.drop_index(op.f('ix_document_access_logs_id'), table_name='document_access_logs')
    op.drop_index(op.f('ix_document_access_logs_document_id'), table_name='document_access_logs')
    op.drop_index(op.f('ix_document_access_logs_action'), table_name='document_access_logs')
    op.drop_index(op.f('ix_document_access_logs_accessed_at'), table_name='document_access_logs')
    op.drop_table('document_access_logs')
    op.drop_index(op.f('ix_documents_status'), table_name='documents')
    op.drop_index(op.f('ix_documents_sender_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_recipient_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_expires_at'), table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###
