"""Add lifecycle management tables

Revision ID: dc296d05e9d1
Revises: c822278260cd
Create Date: 2025-08-22 00:41:10.800794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dc296d05e9d1'
down_revision: Union[str, Sequence[str], None] = 'c822278260cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cleanup_jobs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('job_type', sa.String(length=50), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('items_processed', sa.Integer(), nullable=False),
    sa.Column('items_failed', sa.Integer(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('event_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cleanup_jobs_job_type'), 'cleanup_jobs', ['job_type'], unique=False)
    op.create_index(op.f('ix_cleanup_jobs_status'), 'cleanup_jobs', ['status'], unique=False)
    op.create_table('lifecycle_config',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('setting_name', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lifecycle_config_setting_name'), 'lifecycle_config', ['setting_name'], unique=True)
    op.create_table('document_lifecycle_events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('document_id', sa.String(length=36), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('automated', sa.Boolean(), nullable=False),
    sa.Column('triggered_by', sa.String(length=36), nullable=True),
    sa.Column('event_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['triggered_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_lifecycle_events_document_id'), 'document_lifecycle_events', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_lifecycle_events_event_type'), 'document_lifecycle_events', ['event_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_document_lifecycle_events_event_type'), table_name='document_lifecycle_events')
    op.drop_index(op.f('ix_document_lifecycle_events_document_id'), table_name='document_lifecycle_events')
    op.drop_table('document_lifecycle_events')
    op.drop_index(op.f('ix_lifecycle_config_setting_name'), table_name='lifecycle_config')
    op.drop_table('lifecycle_config')
    op.drop_index(op.f('ix_cleanup_jobs_status'), table_name='cleanup_jobs')
    op.drop_index(op.f('ix_cleanup_jobs_job_type'), table_name='cleanup_jobs')
    op.drop_table('cleanup_jobs')
    # ### end Alembic commands ###
