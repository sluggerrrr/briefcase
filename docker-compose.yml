version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: briefcase_dev
      POSTGRES_USER: briefcase_user
      POSTGRES_PASSWORD: briefcase_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U briefcase_user -d briefcase_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./apps/backend
      target: development
    environment:
      - DEBUG=true
      - DATABASE_URL=postgresql://briefcase_user:briefcase_password@db:5432/briefcase_dev
      - SECRET_KEY=dev-secret-key-change-in-production-please
      - ENCRYPTION_KEY=dev-encryption-key-change-in-production-please
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    volumes:
      - ./apps/backend:/app
      - backend_uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend Web App
  frontend:
    build:
      context: ./apps/frontend
      target: development
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  backend_uploads: